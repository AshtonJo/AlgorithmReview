version: "3.9"

services:

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    volumes:
      - build_frontend:/frontend/build
      - ./frontend/:/frontend/
      - ./frontend/node_modules/:/frontend/node_modules
    image: run
    ports:
      - 3000:3000
    environment:
      - WDS_SOCKET_PORT=0
    stdin_open: true
    tty: true

  nginx:
    build: ./nginx
    ports:
      - 80:80
    volumes:
      - build_frontend:/var/www/frontend
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    container_name: nginx
    depends_on:
      - frontend
      - api-gateway
    networks:
      - app-tier
    tty: true

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - 9411:9411
    networks:
      - app-tier
    tty: true

  discovery:
    build:
      context: ./discovery-service
    command: gradle bootRun
    container_name: discovery
    ports: 
      - 8761:8761
    networks:
      - app-tier
    tty: true

  config:
    build:
      context: ./config-service
    command: ./wait-for-it.sh -t 70 db:3306 -- gradle bootRun
    container_name: config
    ports:
      - 8888:8888
    networks:
      - app-tier
    depends_on:
      - discovery
    tty: true

  api-gateway:
    build:
      context: ./apigateway-service
    command: ./wait-for-it.sh -t 70 config:8888 -- gradle bootRun
    container_name: api-gateway
    ports: 
      - 8000:8000
    networks:
      - app-tier
    depends_on:
      - discovery
      - config
    tty: true

  guest:
    build:
      context: ./guest-service
    command: ./wait-for-it.sh -t 70 api-gateway:8000 -- gradle bootRun
    container_name: guest
    networks:
      - app-tier   
    depends_on:
      - discovery
      - config
      - db   
    tty: true

  member:
    build:
      context: ./member-service
    command: ./wait-for-it.sh -t 70 api-gateway:8000 -- gradle bootRun
    container_name: member
    networks:
      - app-tier 
    depends_on:
      - discovery
      - config
      - db   
    tty: true

  problem:
    build:
      context: ./problem-service
    command: ./wait-for-it.sh -t 70 api-gateway:8000 -- gradle bootRun
    container_name: problem
    networks:
      - app-tier
    depends_on:
      - discovery
      - config
      - db
    tty: true

  db:
    image: mysql
    container_name: db
    ports:
      - 3307:3306
    volumes:
      - data_mysql:/var/lib/mysql
    env_file:
      - .env
    networks:
      - app-tier
    tty: true

  redis:
    container_name: redis
    image: redis:alpine
    command: redis-server --port 6379
    hostname: redis_boot
    labels:
      - "name=redis"
      - "mode=standalone"
    ports:
      - 6379:6379
    networks:
      - app-tier
    tty: true

networks:
  app-tier:
    driver: bridge

volumes:
  data_mysql: null
  build_frontend: null