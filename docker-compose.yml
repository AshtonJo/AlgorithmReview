version: "3"

services:

  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   ports:
  #     - "2181:2181"
  #   networks:
  #     justpickup-network:
  #       ipv4_address: 172.0.0.1

  # kafka:
  #   image: wurstmeister/kafka:2.12-2.3.0
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: 172.0.0.2
  #     KAFKA_CREATE_TOPICS: "test:1:1"
  #     KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   depends_on:
  #     - zookeeper
  #   networks:
  #     - app-tier

  discovery:
    image: ohksj77/discovery-service
    container_name: discovery
    ports: 
      - 8761:8761
    networks:
      - app-tier
    environment:
      - spring.config.import=optional:configserver:http://config:8888 
    tty: true

  config:
    image: ohksj77/config-service
    container_name: config
    ports:
      - 8888:8888
    networks:
      - app-tier
    depends_on:
      - discovery
    tty: true

  api-gateway:
    image: ohksj77/apigateway-service
    container_name: api-gateway
    ports: 
      - 8000:8000
    networks:
      - app-tier
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.config.import=optional:configserver:http://config:8888
    depends_on:
      - discovery
    tty: true

  guest:
    image: ohksj77/guest-service
    container_name: guest
    networks:
      - app-tier
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.config.import=optional:configserver:http://config:8888     
    depends_on:
      - discovery
      - config
      - db   
    tty: true

  member:
    image: ohksj77/member-service
    container_name: member
    networks:
      - app-tier
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.config.import=optional:configserver:http://config:8888     
    depends_on:
      - discovery
      - config
      - db   
    tty: true

  problem:
    image: ohksj77/problem-service
    container_name: problem
    networks:
      - app-tier
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.config.import=optional:configserver:http://config:8888     
    depends_on:
      - discovery
      - config
      - db   
    tty: true

  review:
    image: ohksj77/review-service
    container_name: review
    networks:
      - app-tier
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery:8761/eureka/
      - spring.config.import=optional:configserver:http://config:8888     
    depends_on:
      - discovery
      - config
      - db   
    tty: true

  db:
    image: mysql
    container_name: mysql-con
    ports:
      - 3306:3306
    volumes:
      - data_mysql:/mysql
    env_file:
      - .env
    networks:
      - app-tier
    tty: true

  # redis:
  #   container_name: redis
  #   image: redis:alpine
  #   command: redis-server --port 6379
  #   hostname: redis_boot
  #   labels:
  #     - "name=redis"
  #     - "mode=standalone"
  #   ports:
  #     - 6379:6379
  #   networks:
  #     - app-tier

networks:
  app-tier:
    driver: bridge
