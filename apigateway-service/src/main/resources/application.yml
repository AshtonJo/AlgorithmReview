server:
  port: 8000

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://discovery:8761/eureka

spring:
  application:
    name: apigateway-service

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            redirect-uri: http://localhost:8000/member-service/user/google/callback

  zipkin:
    base-url: http://zipkin:9411
    enabled: true
  sleuth:
    sampler:
      probability: 1.0

  cloud:
    gateway:
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOrigins: "http://:localhost"
            allow-credentials: true
            allowedMethods:
              - GET
              - POST
              - DELETE
              - PUT
              - PATCH
              - OPTIONS
            allowedHeaders: '*'
      routes:
        - id: member-service
          uri: lb://MEMBER-SERVICE
          predicates:
            - Path=/member-service/api/login
            - Method=POST
          filters:
            - RewritePath=/member-service/api/(?<segment>.*),/$\{segment}
        - id: member-service
          uri: lb://MEMBER-SERVICE
          predicates:
            - Path=/member-service/api/reissue
            - Method=GET
          filters:
            - RewritePath=/member-service/api/(?<segment>.*),/$\{segment}
        - id: member-service
          uri: lb://MEMBER-SERVICE
          predicates:
            - Path=/member-service/logout
            - Method=POST
          filters:
            - RewritePath=/member-service/api/(?<segment>.*),/$\{segment}
        - id: member-service
          uri: lb://MEMBER-SERVICE
          predicates:
            - Path=/member-service/api/auth/reissue
            - Method=GET
          filters:
            - RewritePath=/member-service/api/(?<segment>.*),/$\{segment}
        - id: member-service
          uri: lb://MEMBER-SERVICE
          predicates:
            - Path=/member-service/api/oauth2/authorization/*
          filters:
            - RewritePath=/member-service/api/(?<segment>.*),/$\{segment}
        - id: member-service
          uri: lb://MEMBER-SERVICE
          predicates:
            - Path=/member-service/api/*/oauth2/code/*
          filters:
            - RewritePath=/member-service/api/(?<segment>.*),/$\{segment}

        - id: member-service
          uri: lb://MEMBER-SERVICE
          predicates:
            - Path=/member-service/api/**
          filters:
            - AuthorizationHeaderFilter
            - RewritePath=/member-service/api/(?<segment>.*),/$\{segment}

        - id: guest-service
          uri: lb://GUEST-SERVICE
          predicates:
            - Path=/guest-service/api/**
          filters:
            - AuthorizationHeaderFilter
            - RewritePath=/guest-service/(?<segment>.*),/$\{segment}
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 3
                redis-rate-limiter.burstCapacity: 3
                key-resolver: "#{@tokenKeyResolver}"

        - id: problem-service
          uri: lb://PROBLEM-SERVICE
          predicates:
            - Path=/problem-service/api/**
          filters:
            - AuthorizationHeaderFilter
            - RewritePath=/problem-service/(?<segment>.*),/$\{segment}
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 3
                redis-rate-limiter.burstCapacity: 3
                key-resolver: "#{@tokenKeyResolver}"

management:
  endpoints:
    web:
      exposures:
        include: refresh, health, beans, httptrace
